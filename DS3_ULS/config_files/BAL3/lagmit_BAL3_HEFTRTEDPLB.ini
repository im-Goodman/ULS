# This file contains all the file names and variables to initialize the DASH_SIM

[DEFAULT]
# Configuration file that contains available resources in DASH-SoC
#resource_file = DASH.SoC.BAL_only.txt
resource_file = DASH.SoC.MULTIPLE_BAL_3.txt

# Configuration files for applications
# To feed multiple applications, please separate the file names with a comma
# (do not include a space between file names) and be sure that resource file
# has all information about the tasks from both task graphs
# task_file = job_WIFI_5TXM.txt,job_WIFI_5RXM.txt,job_LAG.txt,job_SCT.txt,job_SCR.txt,job_TEMP_MIT.txt
# task_file = job_WIFI_5TXM.txt,job_WIFI_5RXM.txt
task_file = job_LAG.txt,job_TEMP_MIT.txt

# The scheduler name
scheduler = HEFT_RT

# The variable to control the random state for the job inter-arrival time
random_seed = 1

# The core simulation engine tick with simulation clock (in us)
clock = 1

# The length of the simulation (in us)
simulation_length = 100000

# Standard deviation for randomization of execution time
# as a percentage (0 => 1 of expected execution time)
standard_deviation = 0.0

[SCHEDULER PARAMETERS]
heft_adaptive = False
heft_mergeMethod = COMMON_ENTRY_EXIT
heft_rankMetric = EDP
heft_opMode = EDP RELATIVE

[IL SCHEDULER]
# Use enable_dataset_save=yes if dataset is required to be saved for training
# Use enable_ils_policy=no if IL policy is to be used for decision making
# The two values are complementary to each other
enable_dataset_save       = no
enable_ils_policy         = no
enable_ils_dagger         = no

RT_tree_depth             = 12

[TRACE]
# Assign trace variables to be yes (or no) to save traces of the execution
clean_traces              = yes
trace_tasks               = no
trace_system              = no
trace_frequency           = no
trace_PEs                 = no
trace_IL_predictions      = no
trace_temperature         = no
trace_load                = no
create_dataset_DTPM       = no

# Trace file names
trace_file_tasks             = trace_tasks.csv
trace_file_system            = trace_system.csv
trace_file_frequency         = trace_frequency.csv
trace_file_PEs               = trace_PEs.csv
trace_file_IL_predictions    = trace_IL_predictions.csv
trace_file_temperature       = trace_temperature.csv
trace_file_temperature_workload = trace_temperature_workload.csv
trace_file_load              = trace_load.csv
dataset_file_DTPM            = dataset_DTPM.csv
hardware_counters_trace      = DTPM_hardware_counters_trace.csv
hardware_counters_single_app = DTPM_hardware_counters_single_app.csv
deadline_file                = deadlines.csv
results                      = results.csv
# Hardware counter traces - the traces to be merged are configured in the common.py file
trace_wifi_TX                = DTPM_hardware_counters_trace_WIFI_TX.csv
trace_wifi_RX                = DTPM_hardware_counters_trace_WIFI_RX.csv
trace_range_det              = DTPM_hardware_counters_trace_RANGE.csv
trace_SCT                    = DTPM_hardware_counters_trace_SCT.csv
trace_SCR                    = DTPM_hardware_counters_trace_SCR.csv
trace_TEMP_MIT               = DTPM_hardware_counters_trace_TEMP_MIT.csv

[POWER MANAGEMENT]
# Sampling rate for the DVFS mechanism
sampling_rate             = 10
sampling_rate_temperature = 20
snippet_size              = 10

# High and low thresholds for the ondemand mode
util_high_threshold = 0.8
util_low_threshold  = 0.3

# Machine learning-based DVFS policy: LR (Logistic Regression), MLP (Multi-Layer Perceptron), DT (Decision Tree), RF (Random Forest)
DAgger_iter  = 5
ml_algorithm = DT
# Optimization objective: EDP or performance
optimization_objective = EDP
enable_real_time_constraints = no
real_time_aware_oracle       = no
enable_regression_policy     = no
enable_num_cores_prediction  = no
enable_thermal_management    = no
train_on_reduced_dataset     = yes
remove_app_ID                = 0

DTPM_freq_policy_file       = DTPM_freq.pkl
DTPM_num_cores_policy_file  = DTPM_num_cores.pkl
DTPM_regression_file        = DTPM_regression.pkl

# Thermal trip points configuration
enable_throttling       = no
trip_temperature        = [85, 90, 95]
trip_hysteresis         = [3, 3, 3]
enable_DTPM_throttling  = no
DTPM_thermal_limit      = 95
DTPM_trip_temperature   = [95, 100, 105]
N_steps_temperature_prediction = 800

# Coefficients for the leakage power model (Odroid XU3 board)
C1    = 0.002488
C2    = 2660
Igate = 0.000519
T_ambient = 42

[SIMULATION MODE]
# Choose the simulation mode, i.e., validation or performance
# In validation mode simulation runs until it finishes the total number of jobs
# In performance mode simulation runs until it reaches the simulation length
simulation_mode = performance

# The total number of jobs will be generated during the simulation
jobs = 10
max_jobs_in_parallel = 12

# Define a list with the number of jobs to be executed per application
# <WiFi TX, WiFi RX, Range, SCT, SCR>
# This configuration is expected to match the order of the MERGE_LIST variable in the common.py file.
# Use [] to disable this config
# For multiple snippets, define a list of lists

job_list = []

# --- Random sample ---
# job_list = [[2, 4, 1, 1, 2], [2, 4, 3, 0, 1], [1, 4, 0, 2, 3], [1, 0, 6, 0, 3], [3, 4, 0, 0, 3], [1, 1, 3, 5, 0], [6, 2, 0, 1, 1], [3, 0, 0, 4, 3], [3, 1, 5, 0, 1], [1, 3, 5, 0, 1], [4, 0, 0, 2, 4], [0, 1, 7, 1, 1], [4, 4, 0, 1, 1], [2, 0, 0, 1, 7], [1, 0, 0, 1, 8], [6, 0, 0, 3, 1], [0, 0, 0, 7, 3], [3, 0, 0, 7, 0], [1, 4, 0, 1, 4], [2, 5, 0, 2, 1], [2, 0, 0, 7, 1], [5, 1, 4, 0, 0], [0, 3, 5, 1, 1], [1, 4, 4, 1, 0], [0, 2, 0, 7, 1], [3, 1, 1, 0, 5], [1, 6, 0, 1, 2], [3, 3, 2, 1, 1], [2, 0, 5, 1, 2], [1, 4, 0, 5, 0], [0, 7, 1, 2, 0], [1, 0, 2, 2, 5], [0, 0, 6, 2, 2], [0, 0, 1, 0, 9], [6, 2, 0, 0, 2], [1, 4, 3, 0, 2], [0, 8, 1, 1, 0], [0, 1, 1, 7, 1], [0, 2, 0, 1, 7], [0, 1, 1, 6, 2], [3, 1, 0, 2, 4], [1, 1, 1, 6, 1], [3, 1, 4, 0, 2], [3, 0, 4, 2, 1], [2, 1, 1, 5, 1], [3, 0, 0, 6, 1], [2, 4, 1, 0, 3], [1, 4, 2, 3, 0], [3, 2, 1, 4, 0], [3, 4, 1, 1, 1]]
# job_list = [[3, 7], [2, 8], [ 0, 10], [4, 6], [7, 3], [9, 1], [10,  0], [6, 4], [5, 5], [1, 9], [8, 2], [3, 7], [10,  0], [4, 6], [5, 5], [2, 8], [9, 1], [6, 4], [7, 3], [1, 9], [8, 2], [ 0, 10], [2, 8], [9, 1], [7, 3], [8, 2], [ 0, 10], [1, 9], [10,  0], [4, 6], [6, 4], [3, 7], [5, 5], [1, 9], [9, 1], [6, 4], [4, 6], [ 0, 10], [3, 7], [10,  0], [2, 8], [5, 5], [8, 2], [7, 3], [8, 2], [3, 7], [1, 9], [10,  0], [2, 8], [7, 3], [5, 5], [ 0, 10], [6, 4], [4, 6], [9, 1], [7, 3], [3, 7], [5, 5], [2, 8], [6, 4], [ 0, 10], [8, 2], [9, 1], [10,  0], [1, 9], [4, 6], [6, 4], [ 0, 10], [1, 9], [3, 7], [8, 2], [10,  0], [9, 1], [5, 5], [4, 6], [2, 8], [7, 3], [6, 4], [9, 1], [3, 7], [5, 5], [7, 3], [2, 8], [1, 9], [4, 6], [10,  0], [ 0, 10], [8, 2], [2, 8], [3, 7], [7, 3], [4, 6], [5, 5], [10,  0], [1, 9], [9, 1], [6, 4], [ 0, 10], [8, 2], [3, 7], [ 0, 10], [5, 5], [1, 9], [4, 6], [7, 3], [9, 1], [8, 2], [2, 8], [10,  0], [6, 4], [3, 7], [8, 2], [2, 8], [5, 5], [7, 3], [10,  0], [4, 6], [6, 4], [9, 1], [1, 9], [ 0, 10], [3, 7], [4, 6], [9, 1], [ 0, 10], [2, 8], [8, 2], [6, 4], [10,  0], [5, 5], [7, 3], [1, 9], [10,  0], [9, 1], [4, 6], [8, 2], [1, 9], [ 0, 10], [6, 4], [5, 5], [7, 3], [2, 8], [3, 7], [7, 3], [3, 7], [ 0, 10], [2, 8], [5, 5], [1, 9], [4, 6], [10,  0], [6, 4], [9, 1], [8, 2], [1, 9], [2, 8], [5, 5], [3, 7], [8, 2], [ 0, 10], [6, 4], [4, 6], [9, 1], [7, 3], [10,  0], [5, 5], [3, 7], [4, 6], [2, 8], [6, 4], [8, 2], [ 0, 10], [1, 9], [9, 1], [7, 3], [10,  0], [10,  0], [9, 1], [4, 6], [3, 7], [ 0, 10], [7, 3], [8, 2], [5, 5], [6, 4], [2, 8], [1, 9], [6, 4], [1, 9], [7, 3], [2, 8], [4, 6], [9, 1], [5, 5], [8, 2], [ 0, 10], [10,  0], [3, 7], [6, 4], [8, 2], [ 0, 10], [4, 6], [7, 3], [9, 1], [2, 8], [10,  0], [5, 5], [1, 9], [3, 7], [4, 6], [7, 3], [3, 7], [8, 2], [10,  0], [ 0, 10], [1, 9], [6, 4], [2, 8], [5, 5], [9, 1]]

# --- Five-app job_list ---
# job_list = [[1, 0, 5, 3, 1], [1, 6, 1, 0, 2], [1, 1, 4, 3, 1], [1, 1, 5, 1, 2], [2, 1, 4, 0, 3], [0, 4, 4, 1, 1], [1, 3, 2, 0, 4], [1, 4, 3, 2, 0], [0, 6, 0, 2, 2], [0, 2, 4, 0, 4], [5, 2, 2, 1, 0], [1, 3, 5, 0, 1], [6, 0, 3, 1, 0], [4, 0, 1, 2, 3], [1, 0, 6, 2, 1], [3, 3, 2, 1, 1], [0, 0, 1, 0, 9], [2, 0, 1, 2, 5], [4, 0, 5, 1, 0], [1, 4, 4, 1, 0], [7, 2, 0, 0, 1], [0, 0, 4, 3, 3], [0, 0, 3, 3, 4], [1, 0, 2, 2, 5], [3, 3, 2, 0, 2], [6, 0, 0, 2, 2], [2, 8, 0, 0, 0], [5, 0, 1, 0, 4], [0, 4, 3, 1, 2], [3, 1, 6, 0, 0], [0, 2, 3, 3, 2], [2, 3, 1, 2, 2], [3, 0, 5, 2, 0], [3, 5, 0, 1, 1], [2, 0, 5, 2, 1], [2, 5, 3, 0, 0], [1, 2, 3, 2, 2], [0, 7, 1, 0, 2], [0, 5, 4, 0, 1], [3, 0, 4, 0, 3], [4, 2, 2, 2, 0], [3, 1, 2, 0, 4], [0, 3, 5, 2, 0], [1, 0, 1, 3, 5], [0, 8, 0, 2, 0], [1, 1, 0, 2, 6], [8, 0, 1, 0, 1], [2, 0, 1, 4, 3], [0, 0, 6, 2, 2], [3, 2, 1, 0, 4], [0, 8, 0, 1, 1], [0, 4, 0, 0, 6], [1, 6, 1, 0, 2], [1, 4, 0, 4, 1], [8, 0, 0, 2, 0], [0, 0, 0, 4, 6], [0, 0, 5, 1, 4], [1, 0, 6, 3, 0], [2, 1, 2, 2, 3], [2, 5, 0, 3, 0], [1, 1, 7, 0, 1], [6, 0, 1, 2, 1], [0, 4, 1, 1, 4], [5, 0, 2, 0, 3], [5, 0, 0, 1, 4], [4, 2, 1, 3, 0], [0, 0, 5, 0, 5], [0, 0, 6, 1, 3], [0, 0, 1, 0, 9], [5, 0, 4, 1, 0], [1, 4, 1, 4, 0], [2, 2, 5, 1, 0], [0, 3, 7, 0, 0], [0, 3, 3, 0, 4], [0, 2, 4, 4, 0], [0, 5, 0, 3, 2], [2, 2, 3, 0, 3], [3, 0, 6, 0, 1], [5, 0, 2, 0, 3], [1, 0, 8, 0, 1], [2, 0, 8, 0, 0], [2, 1, 7, 0, 0], [2, 2, 2, 0, 4], [0, 0, 0, 4, 6], [0, 1, 3, 5, 1], [0, 1, 0, 9, 0], [0, 1, 2, 7, 0], [2, 2, 0, 0, 6], [1, 1, 4, 0, 4], [3, 4, 1, 2, 0], [4, 1, 0, 3, 2], [2, 0, 2, 6, 0], [1, 1, 1, 6, 1], [1, 4, 4, 0, 1], [0, 4, 1, 2, 3], [1, 1, 6, 1, 1], [4, 0, 0, 0, 6], [5, 2, 2, 1, 0], [4, 1, 2, 3, 0], [0, 0, 2, 1, 7], [2, 2, 2, 3, 1], [3, 0, 1, 6, 0], [1, 3, 1, 5, 0], [0, 1, 2, 3, 4], [3, 0, 1, 1, 5], [6, 0, 1, 2, 1], [1, 3, 3, 3, 0], [1, 3, 0, 0, 6], [1, 2, 0, 7, 0], [4, 1, 4, 1, 0], [0, 0, 0, 1, 9], [1, 0, 7, 0, 2], [2, 0, 4, 2, 2], [0, 4, 3, 0, 3], [0, 5, 1, 0, 4], [2, 1, 5, 0, 2], [5, 1, 4, 0, 0], [0, 0, 1, 8, 1], [2, 3, 1, 3, 1], [0, 2, 3, 3, 2], [0, 1, 2, 5, 2], [1, 1, 4, 0, 4], [0, 1, 7, 0, 2], [0, 1, 0, 7, 2], [1, 2, 1, 3, 3], [1, 4, 0, 4, 1], [1, 8, 1, 0, 0], [4, 3, 2, 1, 0], [0, 4, 4, 2, 0], [0, 0, 6, 1, 3], [6, 1, 2, 0, 1], [0, 6, 1, 0, 3], [0, 0, 5, 0, 5], [3, 4, 0, 1, 2], [2, 0, 0, 1, 7], [0, 6, 1, 2, 1], [0, 0, 1, 2, 7], [3, 3, 1, 2, 1], [2, 1, 3, 3, 1], [0, 3, 0, 6, 1], [4, 0, 1, 0, 5], [0, 2, 0, 8, 0], [0, 0, 5, 1, 4], [4, 1, 0, 1, 4], [0, 6, 0, 2, 2], [1, 2, 0, 7, 0], [2, 2, 1, 5, 0], [2, 0, 1, 7, 0], [3, 3, 1, 2, 1], [0, 0, 7, 3, 0], [4, 2, 2, 1, 1], [0, 3, 4, 0, 3], [0, 1, 2, 3, 4], [3, 0, 2, 1, 4], [0, 3, 7, 0, 0], [3, 0, 0, 0, 7], [3, 0, 3, 1, 3], [5, 1, 3, 0, 1], [0, 1, 1, 6, 2], [6, 2, 2, 0, 0], [6, 0, 2, 1, 1], [0, 0, 3, 1, 6], [2, 0, 3, 3, 2], [1, 2, 3, 3, 1], [1, 1, 3, 3, 2], [0, 0, 1, 3, 6], [2, 3, 0, 1, 4], [3, 1, 1, 2, 3], [1, 6, 0, 2, 1], [0, 2, 0, 8, 0], [2, 1, 0, 5, 2], [1, 0, 2, 7, 0], [2, 2, 0, 6, 0], [1, 7, 0, 1, 1], [7, 1, 0, 0, 2], [2, 2, 2, 4, 0], [5, 4, 0, 1, 0], [2, 2, 3, 2, 1], [0, 3, 3, 4, 0], [0, 3, 4, 0, 3]]
# --- Six-app job list ---
#job_list = [[2, 4, 0, 2, 0, 2], [1, 2, 1, 0, 2, 4], [3, 2, 4, 0, 0, 1], [2, 0, 6, 1, 1, 0], [2, 0, 8, 0, 0, 0], [0, 1, 2, 1, 0, 6], [1, 0, 5, 0, 4, 0], [0, 2, 2, 1, 2, 3], [2, 0, 1, 0, 3, 4], [9, 0, 0, 0, 0, 1], [5, 2, 1, 1, 0, 1], [2, 2, 2, 1, 1, 2], [0, 0, 1, 3, 0, 6], [2, 1, 1, 4, 2, 0], [0, 1, 4, 2, 3, 0], [4, 0, 3, 1, 1, 1], [6, 0, 0, 4, 0, 0], [1, 2, 1, 1, 3, 2], [6, 1, 3, 0, 0, 0], [1, 7, 0, 1, 1, 0], [2, 1, 0, 1, 6, 0], [1, 0, 0, 1, 6, 2], [2, 3, 3, 0, 0, 2], [2, 1, 3, 0, 4, 0], [0, 1, 3, 1, 2, 3], [0, 0, 2, 4, 3, 1], [0, 2, 1, 1, 4, 2], [1, 0, 1, 2, 0, 6], [1, 3, 1, 2, 1, 2], [0, 0, 1, 3, 0, 6], [0, 3, 1, 1, 5, 0], [1, 2, 0, 1, 1, 5], [1, 0, 1, 3, 5, 0], [2, 3, 2, 2, 1, 0], [1, 6, 2, 0, 0, 1], [3, 0, 5, 2, 0, 0], [1, 1, 0, 1, 0, 7], [1, 3, 4, 0, 2, 0], [1, 3, 1, 3, 2, 0], [2, 1, 0, 4, 1, 2], [1, 4, 1, 2, 1, 1], [0, 0, 6, 1, 2, 1], [2, 1, 1, 0, 2, 4], [4, 2, 2, 0, 1, 1], [0, 1, 1, 3, 1, 4], [4, 1, 1, 2, 2, 0], [5, 1, 0, 3, 1, 0], [0, 2, 4, 1, 2, 1], [3, 0, 4, 0, 3, 0], [1, 1, 2, 1, 5, 0], [0, 4, 4, 1, 1, 0], [5, 0, 0, 0, 3, 2], [0, 2, 1, 5, 2, 0], [0, 0, 1, 0, 4, 5], [1, 1, 1, 5, 0, 2], [0, 4, 2, 3, 1, 0], [3, 0, 1, 2, 3, 1], [5, 0, 0, 0, 1, 4], [0, 0, 6, 2, 2, 0], [0, 0, 4, 4, 2, 0], [1, 6, 1, 0, 2, 0], [7, 3, 0, 0, 0, 0], [1, 2, 2, 3, 2, 0], [1, 1, 4, 2, 0, 2], [1, 2, 1, 5, 1, 0], [0, 5, 1, 0, 1, 3], [4, 1, 1, 3, 1, 0], [0, 3, 1, 0, 0, 6], [1, 3, 3, 1, 2, 0], [6, 1, 0, 0, 1, 2], [2, 0, 0, 7, 0, 1], [0, 1, 4, 2, 0, 3], [1, 4, 1, 0, 2, 2], [1, 2, 0, 2, 0, 5], [0, 1, 0, 1, 5, 3], [5, 1, 0, 2, 0, 2], [5, 1, 1, 0, 1, 2], [2, 0, 6, 1, 0, 1], [4, 0, 0, 0, 6, 0], [2, 1, 0, 1, 0, 6], [2, 2, 0, 0, 5, 1], [2, 5, 2, 1, 0, 0], [1, 1, 0, 5, 0, 3], [4, 0, 3, 1, 2, 0], [2, 0, 0, 5, 3, 0], [5, 0, 0, 3, 1, 1], [1, 0, 1, 1, 6, 1], [1, 1, 2, 0, 3, 3], [0, 3, 3, 2, 2, 0], [0, 2, 1, 4, 0, 3], [3, 0, 1, 3, 0, 3], [0, 5, 0, 0, 4, 1], [2, 2, 1, 2, 0, 3], [3, 2, 2, 0, 3, 0], [0, 2, 4, 0, 0, 4], [7, 0, 1, 0, 1, 1], [3, 0, 0, 1, 5, 1], [0, 2, 5, 2, 1, 0], [0, 1, 1, 2, 1, 5], [0, 0, 3, 1, 6, 0], [2, 1, 3, 2, 0, 2], [2, 0, 0, 2, 0, 6], [3, 3, 1, 2, 0, 1], [4, 0, 0, 0, 3, 3], [0, 3, 1, 1, 2, 3], [0, 3, 2, 5, 0, 0], [1, 1, 1, 3, 1, 3], [2, 3, 1, 1, 2, 1], [2, 3, 0, 3, 1, 1], [0, 1, 2, 1, 6, 0], [0, 2, 4, 1, 1, 2], [0, 2, 1, 2, 4, 1], [5, 2, 2, 0, 0, 1], [6, 0, 0, 3, 0, 1], [0, 7, 1, 0, 0, 2], [3, 4, 0, 1, 2, 0], [2, 0, 5, 1, 1, 1], [0, 0, 2, 2, 2, 4], [5, 1, 0, 3, 1, 0], [2, 0, 2, 6, 0, 0], [6, 0, 0, 1, 0, 3], [0, 3, 1, 6, 0, 0], [0, 0, 2, 4, 4, 0], [7, 0, 0, 0, 3, 0], [3, 2, 2, 2, 0, 1], [2, 1, 0, 0, 7, 0], [2, 1, 0, 5, 2, 0], [0, 6, 0, 0, 3, 1], [5, 3, 0, 1, 0, 1], [0, 6, 0, 1, 1, 2], [4, 1, 0, 2, 2, 1], [3, 0, 2, 1, 0, 4], [0, 0, 0, 7, 3, 0], [2, 2, 2, 1, 1, 2], [5, 1, 1, 2, 0, 1], [2, 0, 6, 1, 0, 1], [0, 0, 3, 2, 5, 0], [0, 1, 4, 4, 1, 0], [2, 1, 1, 1, 2, 3], [0, 3, 3, 2, 2, 0], [0, 0, 7, 0, 2, 1], [7, 0, 2, 0, 0, 1], [9, 1, 0, 0, 0, 0], [0, 0, 0, 8, 0, 2], [2, 1, 2, 0, 0, 5], [4, 2, 0, 1, 0, 3], [1, 0, 3, 2, 1, 3], [1, 3, 0, 1, 2, 3], [0, 0, 4, 2, 2, 2], [1, 7, 0, 0, 1, 1], [3, 1, 0, 1, 0, 5], [5, 0, 3, 0, 1, 1], [2, 3, 3, 0, 1, 1], [0, 0, 1, 2, 7, 0], [4, 3, 0, 0, 3, 0], [3, 2, 0, 1, 3, 1], [0, 3, 2, 3, 1, 1], [1, 0, 5, 2, 2, 0], [4, 0, 4, 1, 1, 0], [0, 1, 7, 2, 0, 0], [1, 6, 2, 0, 1, 0], [4, 0, 0, 3, 2, 1], [2, 0, 0, 5, 0, 3], [3, 2, 2, 2, 0, 1], [0, 0, 0, 3, 4, 3], [0, 0, 3, 1, 2, 4], [5, 0, 3, 1, 1, 0], [4, 2, 0, 1, 2, 1], [4, 0, 3, 2, 0, 1], [6, 1, 1, 0, 0, 2], [2, 3, 2, 0, 1, 2], [3, 0, 2, 2, 2, 1], [0, 0, 0, 4, 0, 6], [5, 1, 1, 0, 3, 0], [0, 1, 5, 3, 1, 0], [7, 1, 1, 1, 0, 0], [3, 0, 2, 1, 4, 0], [1, 1, 1, 5, 0, 2], [1, 2, 6, 0, 0, 1], [0, 3, 0, 2, 5, 0]]
#job_list = [[5, 1, 1, 0, 2, 1], [2, 0, 0, 2, 6, 0], [0, 0, 2, 0, 0, 8], [0, 1, 5, 3, 1, 0], [0, 2, 1, 3, 1, 3], [0, 2, 3, 4, 1, 0], [1, 2, 0, 0, 4, 3], [0, 1, 1, 1, 2, 5], [3, 0, 3, 2, 0, 2], [3, 0, 4, 0, 1, 2], [0, 6, 0, 4, 0, 0], [2, 2, 3, 2, 1, 0], [7, 0, 0, 1, 1, 1], [2, 5, 0, 3, 0, 0], [0, 4, 0, 0, 1, 5], [0, 3, 3, 0, 1, 3], [2, 2, 2, 0, 2, 2], [1, 1, 3, 3, 1, 1], [0, 5, 1, 0, 2, 2], [1, 4, 0, 0, 4, 1], [0, 2, 4, 0, 0, 4], [1, 3, 2, 0, 0, 4], [1, 0, 2, 3, 0, 4], [2, 1, 0, 2, 4, 1], [0, 1, 0, 1, 6, 2], [0, 3, 3, 0, 2, 2], [0, 2, 0, 0, 2, 6], [0, 0, 0, 1, 4, 5], [7, 2, 0, 1, 0, 0], [1, 2, 1, 1, 2, 3], [0, 5, 1, 1, 2, 1], [3, 3, 0, 0, 2, 2], [0, 5, 0, 0, 3, 2], [0, 3, 0, 5, 2, 0], [2, 4, 1, 1, 1, 1], [1, 1, 0, 5, 1, 2], [5, 0, 1, 0, 1, 3], [1, 0, 0, 3, 4, 2], [1, 3, 0, 0, 3, 3], [0, 2, 7, 0, 1, 0], [0, 3, 1, 5, 0, 1], [2, 5, 0, 2, 1, 0], [0, 6, 0, 0, 4, 0], [1, 1, 2, 1, 0, 5], [1, 0, 0, 1, 5, 3], [1, 3, 1, 1, 1, 3], [1, 1, 2, 0, 3, 3], [1, 3, 4, 2, 0, 0], [8, 2, 0, 0, 0, 0], [0, 4, 0, 0, 6, 0], ]
# job_list = [[2, 4, 0, 2, 0, 2], [1, 2, 1, 0, 2, 4]]

# --- Random sample ---
#job_list = [[2, 4, 1, 1, 2], [2, 4, 3, 0, 1], [1, 4, 0, 2, 3], [1, 0, 6, 0, 3], [3, 4, 0, 0, 3], [1, 1, 3, 5, 0], [6, 2, 0, 1, 1], [3, 0, 0, 4, 3], [3, 1, 5, 0, 1], [1, 3, 5, 0, 1], [4, 0, 0, 2, 4], [0, 1, 7, 1, 1], [4, 4, 0, 1, 1], [2, 0, 0, 1, 7], [1, 0, 0, 1, 8], [6, 0, 0, 3, 1], [0, 0, 0, 7, 3], [3, 0, 0, 7, 0], [1, 4, 0, 1, 4], [2, 5, 0, 2, 1], [2, 0, 0, 7, 1], [5, 1, 4, 0, 0], [0, 3, 5, 1, 1], [1, 4, 4, 1, 0], [0, 2, 0, 7, 1], [3, 1, 1, 0, 5], [1, 6, 0, 1, 2], [3, 3, 2, 1, 1], [2, 0, 5, 1, 2], [1, 4, 0, 5, 0], [0, 7, 1, 2, 0], [1, 0, 2, 2, 5], [0, 0, 6, 2, 2], [0, 0, 1, 0, 9], [6, 2, 0, 0, 2], [1, 4, 3, 0, 2], [0, 8, 1, 1, 0], [0, 1, 1, 7, 1], [0, 2, 0, 1, 7], [0, 1, 1, 6, 2], [3, 1, 0, 2, 4], [1, 1, 1, 6, 1], [3, 1, 4, 0, 2], [3, 0, 4, 2, 1], [2, 1, 1, 5, 1], [3, 0, 0, 6, 1], [2, 4, 1, 0, 3], [1, 4, 2, 3, 0], [3, 2, 1, 4, 0], [3, 4, 1, 1, 1]]
# ---- Burst 3x10 -----
#job_list = [[0, 6, 2, 0, 2], [1, 2, 2, 1, 4], [4, 2, 1, 3, 0], [0, 6, 1, 0, 3], [6, 1, 0, 2, 1], [1, 5, 0, 1, 3], [1, 3, 2, 1, 3], [6, 2, 0, 1, 1], [1, 5, 2, 0, 2], [1, 2, 1, 4, 2], [1, 0, 0, 9, 0], [0, 1, 2, 6, 1], [0, 1, 2, 7, 0], [0, 1, 9, 0, 0], [2, 0, 8, 0, 0], [0, 0, 0, 10, 0], [2, 0, 0, 8, 0], [1, 1, 8, 0, 0], [0, 1, 8, 1, 0], [0, 1, 0, 7, 2], [2, 2, 1, 4, 1], [1, 2, 2, 3, 2], [5, 3, 1, 0, 1], [7, 2, 0, 1, 0], [0, 4, 2, 2, 2], [7, 1, 1, 0, 1], [1, 2, 3, 2, 2], [1, 2, 2, 2, 3], [4, 2, 1, 2, 1], [2, 3, 3, 1, 1], [2, 2, 0, 6, 0], [0, 0, 0, 8, 2], [1, 1, 0, 7, 1], [1, 1, 1, 4, 3], [0, 2, 1, 7, 0], [0, 2, 1, 6, 1], [0, 1, 1, 8, 0], [3, 1, 0, 6, 0], [4, 0, 6, 0, 0], [2, 0, 7, 1, 0], [1, 6, 2, 0, 1], [1, 4, 1, 2, 2], [3, 3, 2, 1, 1], [1, 6, 0, 0, 3], [5, 1, 1, 2, 1], [0, 6, 0, 2, 2], [3, 2, 2, 2, 1], [6, 0, 1, 3, 0], [9, 0, 0, 0, 1], [3, 3, 1, 2, 1]]
# ---- Burst 2x20 -----
#job_list = [[1, 3, 1, 3, 2], [5, 2, 0, 2, 1], [3, 3, 2, 1, 1], [7, 2, 0, 1, 0], [3, 2, 1, 3, 1], [1, 5, 0, 1, 3], [3, 1, 3, 2, 1], [5, 1, 1, 2, 1], [1, 2, 2, 1, 4], [4, 2, 1, 3, 0], [3, 3, 1, 2, 1], [6, 1, 0, 2, 1], [4, 3, 1, 1, 1], [1, 5, 2, 0, 2], [0, 7, 0, 1, 2], [7, 1, 1, 0, 1], [2, 2, 2, 3, 1], [0, 4, 2, 2, 2], [2, 3, 2, 2, 1], [1, 7, 1, 0, 1], [1, 0, 2, 6, 1], [3, 0, 7, 0, 0], [0, 1, 5, 3, 1], [0, 2, 2, 2, 4], [0, 3, 1, 6, 0], [2, 0, 0, 7, 1], [0, 2, 1, 7, 0], [2, 0, 8, 0, 0], [1, 0, 1, 7, 1], [3, 1, 1, 0, 5], [0, 6, 0, 2, 2], [2, 2, 1, 4, 1], [1, 2, 2, 3, 2], [5, 1, 1, 3, 0], [1, 6, 0, 0, 3], [5, 3, 1, 0, 1], [9, 0, 0, 0, 1], [2, 3, 3, 1, 1], [6, 2, 0, 2, 0], [0, 6, 1, 0, 3], [6, 0, 1, 3, 0], [0, 6, 0, 1, 3], [0, 7, 2, 0, 1], [1, 2, 3, 2, 2], [1, 2, 1, 4, 2], [0, 7, 1, 1, 1], [6, 2, 0, 1, 1], [2, 7, 0, 0, 1], [0, 6, 2, 0, 2], [2, 2, 3, 2, 1]]

# Finish the simulation after all jobs are executed
sim_early_stop = no

#### if validation is chosen, define the variables below
# The variable used to adjust the mean value of the job inter-arrival time
# scale variable equals to inverse of lambda in exponential distribution (scale = 1/lambda)
scale = 100

#### if performance is chosen, define the variables below
# warmup is the time period till which no result will be recorded
warmup_period = 10000

# number of iteration to run for a given scale value (1/lambda)
num_of_iterations = 3

# list of scale values which will determine the job arrival rate under performance mode
# construct the list based on range() function in python
# start-stop-step
scale_values = 50-201-25,300-501-200,1000-10001-4500
# Injects a new job as soon as the previous job finished its execution
inject_jobs_asap     = no
# Sets a fixed injection rate (this is overwritten by the inject_jobs_asap config)
fixed_injection_rate = no

[COMMUNICATION MODE]
# Note: choose either Pe_to_PE or shared_memory
# To use PE to PE communication, assign yes to the variable
PE_to_PE = yes
  
# To use a shared memory for the communication, assign yes to the variable
shared_memory = no

[DEBUG]
# Assign debug variables to be yes (or no) to check the flow of the simulation
debug_config = no
debug_sim = no
debug_job = no
debug_sch = no

[INFO]
# Assign info variables to be yes (or no) get the information about the flow of the simulation
info_sim = no
info_job = yes
info_sch = no
